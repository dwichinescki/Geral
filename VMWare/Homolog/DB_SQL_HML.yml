---
- hosts: localhost
  become: no
  gather_facts: False
  vars:
  tasks:
  - name: Load vars file
    include_vars: vars.yaml
  - name: Create a Windows Virtual Machine
    vmware_guest:
      hostname: "{{ vars.vcenter_ip }}"
      username: "{{ vars.vcenter_user }}"
      password: "{{ vars.vcenter_pwd }}"
      validate_certs: no
      name: TPRB10233 - Teste Ansible
      datacenter: VIVO
      cluster: VIVO_CL04_HOMOLOG
      folder: 26_Ansible
      template: TP_TERRAFORM_WIN_2019
      datastore: DSC_HOMOLOG
      annotation: "{{ vars.annotation }}"
      disk:
      - size_gb: '80'
      hardware:
        memory_mb: 8192
        num_cpus: 4
      networks:
        - name: VM_HOMOLOG
          ip: 10.140.10.233
          netmask: 255.255.255.0
          gateway: 10.140.10.1
          domain: prbhomolog.local
          dns_servers:
          - "{{ dns1 }}"
          - "{{ dns2 }}"
      customization:
        hostname: tprb10233
        dns_servers:
        - "{{ dns1 }}"
        - "{{ dns2 }}"
        domain: prbhomolog.local
        password: "{{ domain_pwd }}"
        joindomain: prbhomolog.local
        domainadmin: "{{ domain_user }}"
        domainadminpassword: "{{ domain_pwd }}"
        windows_remote_desktop_enabled: true
        windows_remote_desktop_firewall: allow
      wait_for_customization: yes
      wait_for_ip_address: True
      state: poweredon
    delegate_to: localhost
    register: disk_facts
  - name: Add Controller 1
    community.vmware.vmware_guest_controller:
      hostname: "{{ vars.vcenter_ip }}"
      username: "{{ vars.vcenter_user }}"
      password: "{{ vars.vcenter_pwd }}"
      datacenter: VIVO
      validate_certs: no
      name: TPRB10233 - Teste Ansible
      controllers:
      - state: present
        type: paravirtual
    delegate_to: localhost
  - name: Add disks to virtual machine
    community.vmware.vmware_guest_disk:
      hostname: "{{ vars.vcenter_ip }}"
      username: "{{ vars.vcenter_user }}"
      password: "{{ vars.vcenter_pwd }}"
      datacenter: VIVO
      validate_certs: no
      name: TPRB10233 - Teste Ansible
      disk:
        - size_gb: 30
          type: eagerzeroedthick
          datastore: DSC_HOMOLOG
          state: present
          scsi_controller: 1
          unit_number: 0
          scsi_type: 'paravirtual'
        - size_gb: 50
          type: eagerzeroedthick
          datastore: DSC_HOMOLOG
          state: present
          scsi_controller: 1
          unit_number: 1
          scsi_type: 'paravirtual'
        - size_gb: 40
          type: eagerzeroedthick
          datastore: DSC_HOMOLOG
          state: present
          scsi_controller: 1
          unit_number: 2
          scsi_type: 'paravirtual'
    delegate_to: localhost

- hosts: win
  become: no
  gather_facts: False
  tasks:
  - name: Disable Domain firewall
    win_firewall:
      state: disabled
      profiles:
      - Domain
    tags: disable_firewall
  - name: "Set the TimeZone"
    win_timezone:
      timezone: "E. South America Standard Time"

  - name: Windows | Check for xRemoteDesktopAdmin Powershell module
    win_psmodule:
      name: xRemoteDesktopAdmin
      state: present

  - name: Windows | Enable Remote Desktop
    win_dsc:
      resource_name: xRemoteDesktopAdmin
      Ensure: present
      UserAuthentication: Secure

  - name: Windows | Check for xNetworking Powershell module
    win_psmodule:
      name: xNetworking
      state: present

  - name: Change the CD-ROM from D to H
    win_shell: |
        $cd = $NULL
        $cd = Get-WMIObject -Class Win32_CDROMDrive -ComputerName $env:COMPUTERNAME -ErrorAction Stop
        if ($cd.Drive -eq "D:")
        {
           Write-Output "Changing CD Drive letter from D: to H:"
           Set-WmiInstance -InputObject ( Get-WmiObject -Class Win32_volume -Filter "DriveLetter = 'D:'" ) -Arguments @{DriveLetter='h:'}
        }

# Inicialização dos discos
  - name: Get disk facts
    win_disk_facts:
  - name: Initialize Disk 1
    win_shell: "Initialize-Disk -Number 1"
  - name: Initialize Disk 2
    win_shell: "Initialize-Disk -Number 2"
  - name: Initialize Disk 3
    win_shell: "Initialize-Disk -Number 3"

# Criação das partições
  - name: Create Partition Disk 1 Drive F - MSSQL
    win_partition:
      drive_letter: "F"
      partition_size: -1
      disk_number: "1"
  - name: Create Partition Disk 2 Drive D - DADOS
    win_partition:
      drive_letter: "D"
      partition_size: -1
      disk_number: "2"
  - name: Create Partition Disk 3 Drive T - TEMPDB
    win_partition:
      drive_letter: "T"
      partition_size: -1
      disk_number: "3"

# Formatação das Partições
  - name: Format the partition as NTFS Drive F
    win_format:
      drive_letter: "F"
      file_system: NTFS
      new_label: MSSQL

  - name: Format the partition as NTFS Drive D
    win_format:
      drive_letter: "D"
      file_system: NTFS
      new_label: DADOS

  - name: Format the partition as NTFS Drive T
    win_format:
      drive_letter: "T"
      file_system: NTFS
      new_label: TEMPDB

  - name: Add Install share
    win_share:
      name: install
      description: Config Servidor
      path: C:\Temp
      list: no
      full: Everyone

  - name: Copy folder to c:\temp (results in C:\Temp\temp_files)
    win_copy:
      src: /var/www/repo_ansible/install/sqlserver
      dest: \\10.140.10.233\install

# Instalação .Net Framework 3.5

  - name: Install .Net 3.5 from source
    win_feature:
      name: NET-Framework-Core
      source: C:\Temp\sqlserver\sxs
      state: present
    register: result

  - name: Windows | Install DSC resource (SqlServerDsc)
    win_psmodule:
      name: SQLServerDsc
      state: present

  - name: Windows | Find ISO in downloaded media
    win_find:
      paths: C:\Temp\sqlserver
      patterns: '*.iso'
      file_type: file
    register: iso_find

  - name: Windows | Mount ISO image of SQL Server
    win_disk_image:
      image_path: '{{ iso_find.files[0].path }}'
      state: present
    register: mount_info
    changed_when: false

  - name: Windows | Install SQL Server
    win_dsc:
      resource_name: SqlSetup
      Action: Install
      InstanceName: MSSQLSERVER
      SourcePath: '{{ mount_info.mount_paths[0] }}'
      Features: SQLENGINE,FULLTEXT,AS,IS,CONN,BC,SDK
      ProductKey: '{{ mssql_pid | d(omit)}}'
      UpdateEnabled: False
      InstallSharedDir: F:\Program Files\Microsoft SQL Server
      InstallSharedwowDir: F:\Program Files (x86)\Microsoft SQL Server
      InstanceDir: F:\Program Files\Microsoft SQL Server
      SQLCollation: SQL_Latin1_General_CP1_CI_AS
      SQLSysAdminAccounts: prbhomolog.local\TI - InfraSQL,homolog.jm\TI - InfraSQL
      TcpEnabled: True
      SecurityMode: SQL
      SAPwd_username: sa
      SAPwd_password: P4r4n4.2022
      SQLUserDBDir: D:\ParanaBanco\Dados\Data
      SQLUserDBLogDir: D:\ParanaBanco\Dados\Log
      SQLTempDBDir: T:\ParanaBanco\Dados\Data
      SQLTempDBLogDir: T:\ParanaBanco\Dados\Log
      SqlSvcStartupType: Automatic
      AgtSvcStartupType: Automatic
      AsSvcStartupType: Manual
      BrowserSvcStartupType: Disabled
      SqlTempdbFileSize: 512
      SqlTempdbFileGrowth: 512
      SqlTempdbLogFileSize: 512
      SqlTempdbLogFileGrowth: 512
      PsDscRunAsCredential_username: '{{ ansible_user | d(omit) }}'
      PsDscRunAsCredential_password: '{{ ansible_password | d(omit)}}'
  - name: Install SSMS
    win_package:
      path: C:\Temp\sqlserver\SSMS-Setup-18.9.2-ENU.exe
      product_id: SSMS-Setup-18.9.2-ENU
      arguments:
      - /install
      - /quiet
      - /norestart
      state: present

  - name: Unmount ISO
    win_disk_image:
      image_path: '{{ iso_find.files[0].path }}'
      state: absent
  
# Adicionar Grupo DBAs como Administrator Local
  - name: Add Grupo da DBAs no Grupo ADM Local
    win_group_membership:
      name: Administrators
      members:
        - prbhomolog.local\TI - InfraSQL
      state: present

# Cria usuário local no SQL Server
  - name: Cria usuário local user_azure no SQL Server
    win_command: sqlcmd -i "C:\Temp\sqlserver\adduseradmin.sql"
    register: sqlcmd_out

# Install Zabbix Agent

  - name: Install Zabbix Agent
    win_shell: C:\Temp\sqlserver\zabbix_hml.ps1

# Remove Share
  - name: Remove previously added share
    win_share:
      name: install
      state: absent

# Remove diretório SQLSERVER
  - name: Remove directory structure
    win_file:
      path: C:\Temp\sqlserver
      state: absent